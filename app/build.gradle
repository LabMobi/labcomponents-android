buildscript {
    repositories {
        jcenter()
        google()
    }
}

repositories {
    jcenter()
    google()
}

apply plugin: 'com.android.application'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    compileSdkVersion 28
    signingConfigs {
        defaultSigning {
            storeFile file('signing/signing.keystore')
            storePassword 'BODYAvNhGWueUNSFgKIkelkCoLqVGKlfVJPhdWFAmcrolTDbDb'
            keyAlias 'Componentsdemo'
            keyPassword 'mAojtTLercNvERQrlmMYjBdDmGSnCSZsEJvGTZjWpsJiiaoLbF'
        }
        debugSigning {
            storeFile file('signing/debug.keystore')
            storePassword 'XQRlUyXRrZbUtYdqUywTYlxShiwfVTyCgeyyxdmoqizHAKyPCV'
            keyAlias 'Componentsdemo'
            keyPassword 'vRayMuokhxgsVLtGygRIvkicCBlmJNfDjGlyjBVHlVBKgKcZeA'
        }
    }
    defaultConfig {
        applicationId "mobi.lab.componentsdemo"
        minSdkVersion 16
        targetSdkVersion 28
        signingConfig signingConfigs.defaultSigning
        versionName project.ext.versionName
        versionCode project.ext.versionCode

        println 'CONF: versionName is set to: ' + versionName
        println 'CONF: versionCode is set to: ' + versionCode
        println 'CONF: is a release build: ' + project.ext.isRelease
        println 'CONF: BUILD_NUMBER: ' + "$System.env.BUILD_NUMBER"
    }
    buildTypes {
        release {
            // Proguard is enabled by default
            // (Think about the logging lib before turning this off)
            minifyEnabled true
        }

        debug {
            signingConfig signingConfigs.debugSigning
        }
    }
    lintOptions {
        // In general we want to check for problems. Any time, all the time.
        checkReleaseBuilds true
        // And fail the build if we have errors
        abortOnError true

        // Level depends on the type of the job
        /// Fail the build if buildGreenhouseRelease target is called and we have missing translations!
        project.ext.isRelease ? error("MissingTranslation") : warning("MissingTranslation")
        // Error level things
        /// Hardcoded text should not exist or should have case by case exceptions
        error "HardcodedText"
        // Warning level things
        warning "ImpliedQuantity"
        // Retrofit uses Okio and that generates this warning
        warning "InvalidPackage"
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
}

def GROUP_BUILD_TASKS = 'Build'
task buildGreenhouseDebug(dependsOn: ['clean', 'build'])
buildGreenhouseDebug.group = GROUP_BUILD_TASKS
buildGreenhouseDebug.description = "Build and publish the debug version with GreenhouseCI"

task buildGreenhouseRelease(dependsOn: ['buildGreenhouseDebug'])
buildGreenhouseRelease.group = GROUP_BUILD_TASKS
buildGreenhouseRelease.description = "Build and publish the release version with GreenhouseCI"

build.mustRunAfter clean
